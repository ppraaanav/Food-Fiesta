{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\hhh\\\\myfrontendapp\\\\src\\\\components\\\\PaypalButtons\\\\PaypalButtons.js\",\n  _s = $RefreshSig$();\nimport { PayPalButtons, PayPalScriptProvider, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport React, { useEffect } from 'react';\nimport { useCart } from '../../hooks/useCart';\nimport { pay } from '../../services/orderService';\nimport { useLoading } from '../../hooks/useLoading';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaypalButtons({\n  order\n}) {\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: {\n      clientId: \"AUhsE0SseWp0mzQF1j4EzsIwqb1X7Pe1X_rUsWtJWAQqE766XhzTrzKyE6T6ue423tCqk28UYQxJ6wO-\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Buttons, {\n      order: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 8\n  }, this);\n}\n_c = PaypalButtons;\nfunction Buttons({\n  order\n}) {\n  _s();\n  const {\n    clearCart\n  } = useCart();\n  const navigate = useNavigate();\n  const [{\n    isPending\n  }] = usePayPalScriptReducer();\n  const {\n    showLoading,\n    hideLoading\n  } = useLoading();\n  useEffect(() => {\n    console.log(\"asd\");\n    isPending ? showLoading() : hideLoading();\n  });\n  const createOrder = (data, actions) => {\n    return actions.order.create({\n      purchase_units: [{\n        amount: {\n          currency_code: 'USD',\n          value: order.totalPrice\n        }\n      }]\n    });\n  };\n  const onApprove = async (data, actions) => {\n    try {\n      const payment = await actions.order.capture();\n      const orderId = await pay(payment.id);\n      clearCart();\n      toast.success('Payment Saved Successfully', 'Success');\n      navigate('/track' + orderId);\n    } catch (error) {\n      toast.error('Payment Save Failed', 'Error');\n    }\n  };\n  const onError = err => {\n    toast.error('Payment Failed', 'Error');\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalButtons, {\n    createOrder: createOrder,\n    onApprove: onApprove,\n    onError: onError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Buttons, \"9S0nQkjJOiJ+7aFxelw5SCWn2iA=\", false, function () {\n  return [useCart, useNavigate, usePayPalScriptReducer, useLoading];\n});\n_c2 = Buttons;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaypalButtons\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"names":["PayPalButtons","PayPalScriptProvider","usePayPalScriptReducer","React","useEffect","useCart","pay","useLoading","toast","useNavigate","jsxDEV","_jsxDEV","PaypalButtons","order","options","clientId","children","Buttons","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","clearCart","navigate","isPending","showLoading","hideLoading","console","log","createOrder","data","actions","create","purchase_units","amount","currency_code","value","totalPrice","onApprove","payment","capture","orderId","id","success","error","onError","err","_c2","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/hhh/myfrontendapp/src/components/PaypalButtons/PaypalButtons.js"],"sourcesContent":["import { PayPalButtons, PayPalScriptProvider, usePayPalScriptReducer } from '@paypal/react-paypal-js';\r\nimport React, { useEffect } from 'react';\r\nimport { useCart } from '../../hooks/useCart';\r\nimport { pay } from '../../services/orderService';\r\nimport { useLoading } from '../../hooks/useLoading';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function PaypalButtons({order}) {\r\n    return (\r\n       <PayPalScriptProvider \r\n       options={{\r\n        clientId:\"AUhsE0SseWp0mzQF1j4EzsIwqb1X7Pe1X_rUsWtJWAQqE766XhzTrzKyE6T6ue423tCqk28UYQxJ6wO-\"\r\n       }}>\r\n        <Buttons order ={order} />\r\n\r\n       </PayPalScriptProvider>\r\n    );\r\n}\r\n\r\nfunction Buttons({ order }){\r\n    const {clearCart} = useCart();\r\n    const navigate = useNavigate();\r\n    const [{isPending}] = usePayPalScriptReducer();\r\n    const {showLoading, hideLoading} = useLoading();\r\n\r\n    useEffect(() => {\r\n        console.log(\"asd\");\r\n        isPending ? showLoading() : hideLoading();\r\n    });\r\n\r\n    const createOrder = (data, actions) => {\r\n        return actions.order.create({\r\n            purchase_units: [\r\n                {\r\n                    amount: {\r\n                        currency_code: 'USD',\r\n                        value: order.totalPrice,\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n    };\r\n\r\n    const onApprove = async (data, actions) => {\r\n        try {\r\n            const payment = await actions.order.capture();\r\n            const orderId = await pay(payment.id);\r\n            clearCart();\r\n            toast.success('Payment Saved Successfully', 'Success');\r\n            navigate('/track' + orderId);\r\n        } catch(error) {\r\n            toast.error('Payment Save Failed', 'Error');\r\n        }\r\n    };\r\n\r\n    const onError = err =>{\r\n        toast.error('Payment Failed', 'Error');\r\n    };\r\n    return (\r\n        <PayPalButtons\r\n        createOrder ={createOrder}\r\n        onApprove={onApprove}\r\n        onError={onError}\r\n        />\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}